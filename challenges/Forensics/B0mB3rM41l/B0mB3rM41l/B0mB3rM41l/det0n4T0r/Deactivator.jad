// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Deactivator.java

import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Scanner;

public class Deactivator
{
    public static class Timer
        implements Runnable
    {

        public void run()
        {
            for(int i = 0; i < countDown;)
                try
                {
                    Thread.sleep(1000L);
                    continue;
                }
                catch(InterruptedException interruptedexception)
                {
                    System.out.println("Erroring sleeping for 1 second continously");
                    interruptedexception.printStackTrace();
                    i++;
                }

            System.out.println("BOOOOOOOOOOOOOOOOOOOOOOOOOM!!!");
            System.exit(0);
        }

        int countDown;

        public Timer()
        {
            countDown = 1;
        }
    }


    public Deactivator()
    {
    }

    public static void main(String args[])
        throws NoSuchAlgorithmException, UnsupportedEncodingException
    {
        String s = "18%2%18%4%108%14%7%7%18%4%2%58%9%114%19%113%113%113%113%113%113%96%96%96%96%96%96%30%21%41%114%30%35%113%44%3%30%41%117%116%30%35%114%114%15%30%5%114%39%52%116%114%5%96%96%96%96%60";
        byte byte0 = 65;
        String s1 = "";
        String s2 = "";
        ArrayList arraylist = new ArrayList();
        Scanner scanner = new Scanner(System.in);
        String s3 = "";
        String s5 = "n";
        for(int i = 0; i < s.length(); i++)
            if(s.charAt(i) == '%')
            {
                s2 = (new StringBuilder()).append(s2).append((char)(Integer.parseInt(s1) ^ (byte0 + byte0) / 2)).toString();
                s1 = "";
            } else
            {
                s1 = (new StringBuilder()).append(s1).append(s.charAt(i)).toString();
            }

        s2 = (new StringBuilder()).append(s2).append((char)(0x3c ^ byte0)).toString();
        System.out.println("Please enter the correct PIN in 3 tries max in 2 seconds or I'll go off!\n\n");
        System.out.println("Are you sure you want to continue?(y/n) : ");
        s5 = scanner.nextLine();
        if(s5.equals("y") || s5.equals("Y"))
        {
            Timer timer = new Timer();
            Thread thread = new Thread(timer);
            thread.start();
            MessageDigest messagedigest = MessageDigest.getInstance("SHA-256");
            StringBuilder stringbuilder = new StringBuilder();
            for(int j = 0; j < 3; j++)
            {
                messagedigest.reset();
                System.out.println("PIN : ");
                String s4 = scanner.nextLine();
                byte abyte0[] = s4.getBytes("UTF-8");
                messagedigest.update(abyte0);
                byte abyte1[] = messagedigest.digest();
                for(int k = 0; k < abyte1.length; k++)
                    stringbuilder.append(Integer.toString((abyte1[k] & 0xff) + 256, 16).substring(1));

                if(stringbuilder.toString().equals("dc8865625bbc6c45d31ecf3f3dde2e3557d5ddaf37b5916228b6f6d825974159"))
                {
                    System.out.println((new StringBuilder()).append("\n\nPHEWWW  BOMB DEFUSED!!\n").append(s2).append("\n\nGOOD JOB!!").toString());
                    System.exit(0);
                }
            }

        }
    }
}
